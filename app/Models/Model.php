<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model as Base;
use Illuminate\Support\Str;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Carbon\Carbon;
use Illuminate\Support\Facades\Auth;

class Model extends Base
{
    use HasFactory;

    protected static function booted()
    {
        static::creating(function ($model) {
            if (Auth::check() && isset($model->created_by)) {
                $model->created_user = Auth::user()->user_id;
            }

        });

        static::updating(function ($model) {
            if (Auth::check() && isset($model->updated_by)) {
                $model->updated_user = Auth::user()->user_id;
            }

        });
    }

    public $slugField = 'slug';
    public $slugFromField = '';


    public function save(array $options = [])
    {
        if ($this->slugField && $this->slugFromField) {
            $slugField = $this->slugField;
            $this->$slugField = $this->generateSlug($this->$slugField);
        }
        return parent::save($options); // TO DO: Change the autogenerated stub
    }
    public function generateSlug($string = false, $count = 0)
    {
        if($this->slugField){
            $slugFromField = $this->slugFromField;
            if(empty($string)){
                $string = $this->$slugFromField;
            }
            $slug = $this->strToSlug($string);
            $newSlug = $slug . ($count ? '-' . $count : '');
            $model = static::select('count(id)');
            if ($this->id) {
                $model->where('id', '<>', $this->id);
            }
            $check = $model->where($this->slugField, $newSlug)->count();
            if (!empty($check)) {
                return $this->generateSlug($slug, $count + 1);
            }
            return $newSlug;
        }
    }

    protected function strToSlug($string) {
        $slug = Str::slug($string);
        if(empty($slug)){
            $slug = preg_replace('/\s+/u', '-', trim($string));
        }
        return $slug;
    }
}
